// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-left-name: 'arrow_left';
$arrow-left-x: 0px;
$arrow-left-y: 0px;
$arrow-left-offset-x: 0px;
$arrow-left-offset-y: 0px;
$arrow-left-width: 30px;
$arrow-left-height: 55px;
$arrow-left-total-width: 124px;
$arrow-left-total-height: 87px;
$arrow-left-image: '/assets/images/sprite.png';
$arrow-left: (0px, 0px, 0px, 0px, 30px, 55px, 124px, 87px, '/assets/images/sprite.png', 'arrow_left', );
$arrow-right-name: 'arrow_right';
$arrow-right-x: 30px;
$arrow-right-y: 0px;
$arrow-right-offset-x: -30px;
$arrow-right-offset-y: 0px;
$arrow-right-width: 30px;
$arrow-right-height: 55px;
$arrow-right-total-width: 124px;
$arrow-right-total-height: 87px;
$arrow-right-image: '/assets/images/sprite.png';
$arrow-right: (30px, 0px, -30px, 0px, 30px, 55px, 124px, 87px, '/assets/images/sprite.png', 'arrow_right', );
$icon-facebook-name: 'icon-facebook';
$icon-facebook-x: 60px;
$icon-facebook-y: 0px;
$icon-facebook-offset-x: -60px;
$icon-facebook-offset-y: 0px;
$icon-facebook-width: 32px;
$icon-facebook-height: 32px;
$icon-facebook-total-width: 124px;
$icon-facebook-total-height: 87px;
$icon-facebook-image: '/assets/images/sprite.png';
$icon-facebook: (60px, 0px, -60px, 0px, 32px, 32px, 124px, 87px, '/assets/images/sprite.png', 'icon-facebook', );
$icon-google-plus-name: 'icon-google-plus';
$icon-google-plus-x: 0px;
$icon-google-plus-y: 55px;
$icon-google-plus-offset-x: 0px;
$icon-google-plus-offset-y: -55px;
$icon-google-plus-width: 32px;
$icon-google-plus-height: 32px;
$icon-google-plus-total-width: 124px;
$icon-google-plus-total-height: 87px;
$icon-google-plus-image: '/assets/images/sprite.png';
$icon-google-plus: (0px, 55px, 0px, -55px, 32px, 32px, 124px, 87px, '/assets/images/sprite.png', 'icon-google-plus', );
$icon-map-picker-name: 'icon-map-picker';
$icon-map-picker-x: 92px;
$icon-map-picker-y: 32px;
$icon-map-picker-offset-x: -92px;
$icon-map-picker-offset-y: -32px;
$icon-map-picker-width: 10px;
$icon-map-picker-height: 14px;
$icon-map-picker-total-width: 124px;
$icon-map-picker-total-height: 87px;
$icon-map-picker-image: '/assets/images/sprite.png';
$icon-map-picker: (92px, 32px, -92px, -32px, 10px, 14px, 124px, 87px, '/assets/images/sprite.png', 'icon-map-picker', );
$icon-twitter-name: 'icon-twitter';
$icon-twitter-x: 32px;
$icon-twitter-y: 55px;
$icon-twitter-offset-x: -32px;
$icon-twitter-offset-y: -55px;
$icon-twitter-width: 32px;
$icon-twitter-height: 32px;
$icon-twitter-total-width: 124px;
$icon-twitter-total-height: 87px;
$icon-twitter-image: '/assets/images/sprite.png';
$icon-twitter: (32px, 55px, -32px, -55px, 32px, 32px, 124px, 87px, '/assets/images/sprite.png', 'icon-twitter', );
$icon-youtube-name: 'icon-youtube';
$icon-youtube-x: 92px;
$icon-youtube-y: 0px;
$icon-youtube-offset-x: -92px;
$icon-youtube-offset-y: 0px;
$icon-youtube-width: 32px;
$icon-youtube-height: 32px;
$icon-youtube-total-width: 124px;
$icon-youtube-total-height: 87px;
$icon-youtube-image: '/assets/images/sprite.png';
$icon-youtube: (92px, 0px, -92px, 0px, 32px, 32px, 124px, 87px, '/assets/images/sprite.png', 'icon-youtube', );
$spritesheet-width: 124px;
$spritesheet-height: 87px;
$spritesheet-image: '/assets/images/sprite.png';
$spritesheet-sprites: ($arrow-left, $arrow-right, $icon-facebook, $icon-google-plus, $icon-map-picker, $icon-twitter, $icon-youtube, );
$spritesheet: (124px, 87px, '/assets/images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
